node {

  

        stage('Checkout') {
            git url: 'https://github.com/basivireddy/sample-spring-microservices.git', credentialsId: 'github-basivireddy', branch: 'master'
        }

        	stage('Build and Package') {
	    build("maven", "package");
	    def pom = readMavenPom file:'pom.xml'
            print pom.version
            env.version = pom.version
		
	}

	stage('SonarQube analysis') {
		       checkCodeQuality("sonar");
        }
       
        stage ('Final') {
            build job: 'account-service-pipeline', wait: false
        }      

   

}


def checkCodeQuality(sonarVersion){
	withSonarQubeEnv("${sonarVersion}") { // SonarQube taskId is automatically attached to the pipeline context
        sh "mvn -B -f discovery-service/pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar" 
    }
}


def build(mvnVersion, task){
	def mvnHome = tool name: "${mvnVersion}"
	env.PATH = "${mvnHome}/bin:${env.PATH}"
    sh "mvn -B -f discovery-service/pom.xml clean ${task}"
}
